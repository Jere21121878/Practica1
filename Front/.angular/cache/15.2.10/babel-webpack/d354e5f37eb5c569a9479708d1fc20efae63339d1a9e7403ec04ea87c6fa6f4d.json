{"ast":null,"code":"import { environment } from 'src/enviroments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LocalService {\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = environment.Url;\n    this.myApiUrl = 'api/Local/';\n  }\n  getLocal(Id) {\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}${Id}`);\n  }\n  deleteLocal(Id) {\n    return this.http.delete(`${this.myAppUrl}${this.myApiUrl}${Id}`);\n  }\n  addLocal(local) {\n    return this.http.post(`${this.myAppUrl}${this.myApiUrl}`, local);\n  }\n  updateLocal(Id, local) {\n    return this.http.put(`${this.myAppUrl}${this.myApiUrl}${Id}`, local);\n  }\n  getlocalsByVendedorId(vendedorId) {\n    console.log('URL:', `${this.myAppUrl}${this.myApiUrl}vendedor/${vendedorId}`);\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}vendedor/${vendedorId}`);\n  }\n  getLocalFoto(localId) {\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}${localId}/foto`);\n  }\n  static #_ = this.ɵfac = function LocalService_Factory(t) {\n    return new (t || LocalService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LocalService,\n    factory: LocalService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,QAAQ,6BAA6B;;;AAMzD,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,aAAQ,GAAWH,WAAW,CAACI,GAAG;IAClC,aAAQ,GAAW,YAAY;EAEC;EAExCC,QAAQ,CAACC,EAAU;IACjB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAQ,GAAG,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,QAAQ,GAAGH,EAAE,EAAE,CAAC;EACtE;EAEAI,WAAW,CAACJ,EAAU;IACpB,OAAO,IAAI,CAACH,IAAI,CAACQ,MAAM,CAAO,GAAG,IAAI,CAACH,QAAQ,GAAG,IAAI,CAACC,QAAQ,GAAGH,EAAE,EAAE,CAAC;EACxE;EAEAM,QAAQ,CAACC,KAAY;IACnB,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAQ,GAAG,IAAI,CAACN,QAAQ,GAAG,IAAI,CAACC,QAAQ,EAAE,EAAEI,KAAK,CAAC;EACzE;EAEAE,WAAW,CAACT,EAAU,EAAEO,KAAY;IAClC,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAO,GAAG,IAAI,CAACR,QAAQ,GAAG,IAAI,CAACC,QAAQ,GAAGH,EAAE,EAAE,EAAEO,KAAK,CAAC;EAC5E;EAEAI,qBAAqB,CAACC,UAAkB;IACtCC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,GAAG,IAAI,CAACZ,QAAQ,GAAG,IAAI,CAACC,QAAQ,YAAYS,UAAU,EAAE,CAAC;IAC7E,OAAO,IAAI,CAACf,IAAI,CAACI,GAAG,CAAU,GAAG,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,QAAQ,YAAYS,UAAU,EAAE,CAAC;EACzF;EAEAG,YAAY,CAACC,OAAe;IAC1B,OAAO,IAAI,CAACnB,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,QAAQ,GAAGa,OAAO,OAAO,CAAC;EAC9E;EAAC;qBA7BUrB,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAsB,SAAZtB,YAAY;IAAAuB,YAFX;EAAM","names":["environment","LocalService","constructor","http","Url","getLocal","Id","get","myAppUrl","myApiUrl","deleteLocal","delete","addLocal","local","post","updateLocal","put","getlocalsByVendedorId","vendedorId","console","log","getLocalFoto","localId","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\54351\\Desktop\\Practica1\\Front\\src\\app\\services\\local.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Local } from '../interfaces/local';\nimport { environment } from 'src/enviroments/environment';\nimport { Foto } from '../interfaces/foto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalService {\n  private myAppUrl: string = environment.Url;\n  private myApiUrl: string = 'api/Local/';\n\n  constructor(private http: HttpClient) { }\n\n  getLocal(Id: number): Observable<Local> {\n    return this.http.get<Local>(`${this.myAppUrl}${this.myApiUrl}${Id}`);\n  }\n\n  deleteLocal(Id: number): Observable<void> {\n    return this.http.delete<void>(`${this.myAppUrl}${this.myApiUrl}${Id}`);\n  }\n\n  addLocal(local: Local): Observable<Local> {\n    return this.http.post<Local>(`${this.myAppUrl}${this.myApiUrl}`, local);\n  }\n\n  updateLocal(Id: number, local: Local): Observable<void> {\n    return this.http.put<void>(`${this.myAppUrl}${this.myApiUrl}${Id}`, local);\n  }\n\n  getlocalsByVendedorId(vendedorId: string): Observable<Local[]> {\n    console.log('URL:', `${this.myAppUrl}${this.myApiUrl}vendedor/${vendedorId}`);\n    return this.http.get<Local[]>(`${this.myAppUrl}${this.myApiUrl}vendedor/${vendedorId}`);\n  }\n\n  getLocalFoto(localId: string): Observable<any> {\n    return this.http.get<any>(`${this.myAppUrl}${this.myApiUrl}${localId}/foto`);\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}