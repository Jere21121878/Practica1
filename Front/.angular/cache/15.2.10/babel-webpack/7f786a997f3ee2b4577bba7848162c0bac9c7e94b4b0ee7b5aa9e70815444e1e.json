{"ast":null,"code":"import { environment } from 'src/enviroments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FotoService {\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = environment.Url;\n    this.myApiUrl = 'api/Local/';\n  }\n  getFotosByLocalId(localId) {\n    console.log('URL:', `${this.myAppUrl}${this.myApiUrl}local/${localId}/fotos`); // Endpoint para obtener las fotos por ID de local\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}local/${localId}/fotos`);\n  }\n  static #_ = this.ɵfac = function FotoService_Factory(t) {\n    return new (t || FotoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FotoService,\n    factory: FotoService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,yCAAyC;;;AAMrE,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,aAAQ,GAAWH,WAAW,CAACI,GAAG;IAClC,aAAQ,GAAW,YAAY;EAEC;EACxCC,iBAAiB,CAACC,OAAe;IAC/BC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,GAAG,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,QAAQ,SAASJ,OAAO,QAAQ,CAAC,CAAC,CAAC;IAE/E,OAAO,IAAI,CAACH,IAAI,CAACQ,GAAG,CAAS,GAAG,IAAI,CAACF,QAAQ,GAAG,IAAI,CAACC,QAAQ,SAASJ,OAAO,QAAQ,CAAC;EACxF;EAAC;qBATUL,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAW,SAAXX,WAAW;IAAAY,YAFV;EAAM","names":["environment","FotoService","constructor","http","Url","getFotosByLocalId","localId","console","log","myAppUrl","myApiUrl","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\54351\\Desktop\\Practica1\\Front\\src\\app\\services\\foto.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/enviroments/environment.development';\nimport { Foto } from '../interfaces/foto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FotoService {\n  private myAppUrl: string = environment.Url;\n  private myApiUrl: string = 'api/Local/';\n\n  constructor(private http: HttpClient) { }\n  getFotosByLocalId(localId: string): Observable<Foto[]> {\n    console.log('URL:', `${this.myAppUrl}${this.myApiUrl}local/${localId}/fotos`); // Endpoint para obtener las fotos por ID de local\n\n    return this.http.get<Foto[]>(`${this.myAppUrl}${this.myApiUrl}local/${localId}/fotos`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}