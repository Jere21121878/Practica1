{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/producto.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/grid-list\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"../../../shared/spinner/spinner.component\";\nfunction AddProdictComponent_app_spinner_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-spinner\");\n  }\n}\nexport class AddProdictComponent {\n  constructor(fb, _productoService, router, aRoute, _snackBar) {\n    this.fb = fb;\n    this._productoService = _productoService;\n    this.router = router;\n    this.aRoute = aRoute;\n    this._snackBar = _snackBar;\n    this.loading = false;\n    this.operacion = 'Agregar';\n    this.form = this.fb.group({\n      nombrePro: ['', Validators.required],\n      descripcionPro: ['', Validators.required],\n      categoriaP: ['', Validators.required],\n      imagen: ['', Validators.required],\n      precio: ['', Validators.required],\n      cantidadPro: ['', Validators.required]\n    });\n    const localIdFromRoute = this.aRoute.snapshot.paramMap.get('storeId');\n    // Convert the id from string to string (no change needed)\n    this.localid = localIdFromRoute || '0'; // Ensure it is a string\n  }\n\n  ngOnInit() {\n    // Set the default value of Id to 0\n  }\n  agregarEditarProducto() {\n    const producto = {\n      nombrePro: this.form.value.nombrePro,\n      descripcionPro: this.form.value.descripcionPro,\n      categoriaP: this.form.value.categoriaP,\n      cantidadPro: this.form.value.cantidadPro,\n      precio: this.form.value.precio,\n      imagen: this.form.value.imagen,\n      localid: this.localid\n    };\n    this.agregarPro(producto);\n  }\n  agregarPro(producto) {\n    this._productoService.addProducto(producto).subscribe(data => {\n      this.mensajeExito('registrado');\n      this.router.navigate(['']);\n    });\n  }\n  mensajeExito(texto) {\n    this._snackBar.open(`El producto fue ${texto} con éxito`, '', {\n      duration: 4000,\n      horizontalPosition: 'right'\n    });\n  }\n  static #_ = this.ɵfac = function AddProdictComponent_Factory(t) {\n    return new (t || AddProdictComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductoService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddProdictComponent,\n    selectors: [[\"app-add-prodict\"]],\n    decls: 45,\n    vars: 5,\n    consts: [[1, \"title\"], [4, \"ngIf\"], [1, \"container\"], [1, \"card\"], [3, \"formGroup\", \"ngSubmit\"], [\"cols\", \"2\", \"rowHeight\", \"80px\"], [3, \"colspan\"], [\"appearance\", \"outline\"], [\"formControlName\", \"nombrePro\", \"matInput\", \"\", \"autocomplete\", \"off\"], [\"formControlName\", \"descripcionPro\", \"matInput\", \"\", \"autocomplete\", \"off\"], [\"formControlName\", \"categoriaP\", \"matInput\", \"\", \"autocomplete\", \"off\"], [\"formControlName\", \"cantidadPro\", \"matInput\", \"\", \"autocomplete\", \"off\"], [\"formControlName\", \"imagen\", \"matInput\", \"\", \"autocomplete\", \"off\"], [\"formControlName\", \"precio\", \"matInput\", \"\", \"autocomplete\", \"off\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"btnAceptar\"], [\"mat-raised-button\", \"\", \"routerLink\", \"\"]],\n    template: function AddProdictComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(3, AddProdictComponent_app_spinner_3_Template, 1, 0, \"app-spinner\", 1);\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"mat-card\", 3)(6, \"mat-card-subtitle\");\n        i0.ɵɵtext(7, \" Agregar Producto \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function AddProdictComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.agregarEditarProducto();\n        });\n        i0.ɵɵelementStart(9, \"mat-grid-list\", 5)(10, \"mat-grid-tile\", 6)(11, \"mat-form-field\", 7)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"mat-grid-tile\")(16, \"mat-form-field\", 7)(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Descripcion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"mat-grid-tile\")(21, \"mat-form-field\", 7)(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Categoria\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"mat-grid-tile\")(26, \"mat-form-field\", 7)(27, \"mat-label\");\n        i0.ɵɵtext(28, \"Cantidad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"mat-grid-tile\")(31, \"mat-form-field\", 7)(32, \"mat-label\");\n        i0.ɵɵtext(33, \"Imagen\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"input\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"mat-grid-tile\")(36, \"mat-form-field\", 7)(37, \"mat-label\");\n        i0.ɵɵtext(38, \"Precio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"mat-grid-tile\", 6)(41, \"button\", 14);\n        i0.ɵɵtext(42, \"Agregar Producto!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"button\", 15);\n        i0.ɵɵtext(44, \"Volver\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.operacion, \" un nuevo productoas\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"colspan\", 2);\n        i0.ɵɵadvance(30);\n        i0.ɵɵproperty(\"colspan\", 2);\n      }\n    },\n    dependencies: [i5.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i6.MatGridList, i6.MatGridTile, i7.MatFormField, i7.MatLabel, i8.MatInput, i9.MatButton, i10.MatCard, i10.MatCardSubtitle, i11.SpinnerComponent, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","AddProdictComponent","constructor","fb","_productoService","router","aRoute","_snackBar","form","group","nombrePro","required","descripcionPro","categoriaP","imagen","precio","cantidadPro","localIdFromRoute","snapshot","paramMap","get","localid","ngOnInit","agregarEditarProducto","producto","value","agregarPro","addProducto","subscribe","data","mensajeExito","navigate","texto","open","duration","horizontalPosition","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\54351\\Desktop\\Practica1\\Front\\src\\app\\components\\store\\add-prodict\\add-prodict.component.ts","C:\\Users\\54351\\Desktop\\Practica1\\Front\\src\\app\\components\\store\\add-prodict\\add-prodict.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductoService } from 'src/app/services/producto.service';\n\n@Component({\n  selector: 'app-add-prodict',\n  templateUrl: './add-prodict.component.html',\n  styleUrls: ['./add-prodict.component.css']\n})\nexport class AddProdictComponent implements OnInit{\n  loading: boolean = false;\n  form: FormGroup;\n  operacion: string='Agregar';\n  localid: string; // Agrega esta línea\n\n  constructor(\n    private fb: FormBuilder,\n    private _productoService: ProductoService,\n    private router: Router,\n    private aRoute: ActivatedRoute,\n    private _snackBar: MatSnackBar,\n  ) {\n    this.form = this.fb.group({\n      nombrePro: ['', Validators.required],\n      descripcionPro: ['', Validators.required],\n      categoriaP: ['', Validators.required],\n      imagen: ['', Validators.required],\n      precio: ['', Validators.required],\n      cantidadPro: ['', Validators.required],\n    });\n\n    const localIdFromRoute = this.aRoute.snapshot.paramMap.get('storeId');\n  \n    // Convert the id from string to string (no change needed)\n    this.localid = localIdFromRoute || '0'; // Ensure it is a string\n  }\n\n  ngOnInit(): void {\n    // Set the default value of Id to 0\n    \n  }\n  \n\n\n  \n\n  agregarEditarProducto() {\n    \n      const producto: Producto = {\n        nombrePro: this.form.value.nombrePro,\n        descripcionPro: this.form.value.descripcionPro,\n        categoriaP: this.form.value.categoriaP,\n        cantidadPro: this.form.value.cantidadPro,\n        precio: this.form.value.precio,\n        imagen: this.form.value.imagen,\n        localid: this.localid,\n      };\n  \n      \n        this.agregarPro(producto);\n      \n    \n  }\n\n \n  \n  agregarPro(producto:Producto) {\n    this._productoService.addProducto(producto).subscribe(data => {\n      this.mensajeExito('registrado');\n      this.router.navigate(['']);\n    })\n  }\n\n  mensajeExito(texto: string) {\n    this._snackBar.open(`El producto fue ${texto} con éxito`,'', {\n      duration: 4000,\n      horizontalPosition: 'right',\n    });\n  }\n\n}\n\nexport interface Producto {\n    id?:number,\n    nombrePro: string;\n    categoriaP: string;\n    descripcionPro: string;\n    localid:string,\n    cantidadPro: string;\n    precio: string;\n    imagen: string;\n}\n","\n<div class=\"title\">\n    <h1>{{ operacion }} un nuevo productoas</h1>\n</div>\n<app-spinner *ngIf=\"loading\"></app-spinner>\n<div class=\"container\">\n    <mat-card class=\"card\">\n        <mat-card-subtitle>\n            Agregar Producto\n        </mat-card-subtitle>\n        <form [formGroup]=\"form\" (ngSubmit)=\"agregarEditarProducto()\">\n            <mat-grid-list cols=\"2\" rowHeight=\"80px\">\n                <mat-grid-tile [colspan]=\"2\">\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Nombre</mat-label>\n                        <input formControlName=\"nombrePro\" matInput autocomplete=\"off\">\n                    </mat-form-field>\n                </mat-grid-tile>\n                <mat-grid-tile>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Descripcion</mat-label>\n                        <input formControlName=\"descripcionPro\" matInput autocomplete=\"off\">\n                    </mat-form-field>\n                </mat-grid-tile>\n                <mat-grid-tile>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Categoria</mat-label>\n                        <input formControlName=\"categoriaP\" matInput autocomplete=\"off\">\n                    </mat-form-field>\n                </mat-grid-tile>\n                <mat-grid-tile>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Cantidad</mat-label>\n                        <input formControlName=\"cantidadPro\" matInput autocomplete=\"off\">\n                    </mat-form-field>\n                </mat-grid-tile>\n                <mat-grid-tile>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Imagen</mat-label>\n                        <input formControlName=\"imagen\" matInput autocomplete=\"off\">\n                    </mat-form-field>\n                </mat-grid-tile>\n                <mat-grid-tile>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Precio</mat-label>\n                        <input formControlName=\"precio\" matInput autocomplete=\"off\">\n                    </mat-form-field>\n                </mat-grid-tile>\n\n\n\n                \n               \n                <mat-grid-tile [colspan]=\"2\">\n                    <button  type=\"submit\" class=\"btnAceptar\" mat-raised-button color=\"primary\">Agregar Producto!</button>\n                    <button mat-raised-button routerLink=\"\">Volver</button>\n                </mat-grid-tile>\n            </mat-grid-list>\n        </form>\n    </mat-card>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}