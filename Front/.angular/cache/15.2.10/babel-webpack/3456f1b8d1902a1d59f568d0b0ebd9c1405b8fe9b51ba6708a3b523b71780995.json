{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/producto.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/grid-list\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"../../../shared/spinner/spinner.component\";\nfunction AgregarEditarProductoComponent_app_spinner_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-spinner\");\n  }\n}\nexport class AgregarEditarProductoComponent {\n  constructor(fb, _productoService, router, aRoute, _snackBar) {\n    this.fb = fb;\n    this._productoService = _productoService;\n    this.router = router;\n    this.aRoute = aRoute;\n    this._snackBar = _snackBar;\n    this.loading = false;\n    this.operacion = 'Agregar';\n    this.form = this.fb.group({\n      localid: ['', Validators.required],\n      nombrePro: ['', Validators.required],\n      precio: ['', Validators.required],\n      descripcionPro: ['', Validators.required],\n      categoriaP: ['', Validators.required],\n      imagen: ['', Validators.required],\n      cantidadPro: ['', Validators.required]\n    });\n    this.Id = Number(this.aRoute.snapshot.paramMap.get('Id'));\n  }\n  ngOnInit() {\n    if (this.Id != 0) {\n      this.operacion = 'Editar';\n      this.obtenerPro(this.Id);\n    }\n  }\n  obtenerPro(Id) {\n    this.loading = true;\n    this._productoService.getProducto(Id).subscribe(data => {\n      this.form.setValue({\n        nombrePro: data.nombrePro,\n        descripcionPro: data.descripcionPro,\n        categoriaP: data.categoriaP,\n        cantidadPro: data.cantidadPro,\n        imagen: data.imagen,\n        precio: data.precio,\n        localid: data.precio\n      });\n      this.loading = false;\n    });\n  }\n  agregarEditarPro() {\n    const producto = {\n      localid: this.form.value.precio,\n      nombrePro: this.form.value.nombrePro,\n      descripcionPro: this.form.value.descripcionPro,\n      categoriaP: this.form.value.categoriaP,\n      cantidadPro: this.form.value.cantidadPro,\n      imagen: this.form.value.imagen,\n      precio: this.form.value.precio\n    };\n    if (this.Id != 0) {\n      producto.Id = this.Id;\n      this.editarPro(this.Id, producto);\n    } else {\n      this.agregarPro(producto);\n    }\n  }\n  editarPro(Id, producto) {\n    console.log('Product to update:', producto); // Add this line\n    this.loading = true;\n    this._productoService.updateProducto(Id, producto).subscribe(() => {\n      this.loading = false;\n      console.log('llegue');\n      this.mensajeExito('actualizado');\n      this.router.navigate(['/listPro']);\n    });\n  }\n  agregarPro(producto) {\n    this._productoService.addProducto(producto).subscribe(data => {\n      this.mensajeExito('registrado');\n      this.router.navigate(['/listPro']);\n    });\n  }\n  mensajeExito(texto) {\n    this._snackBar.open(`El producto fue ${texto} con exito`, '', {\n      duration: 4000,\n      horizontalPosition: 'right'\n    });\n  }\n  static #_ = this.ɵfac = function AgregarEditarProductoComponent_Factory(t) {\n    return new (t || AgregarEditarProductoComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductoService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AgregarEditarProductoComponent,\n    selectors: [[\"app-agregar-editar-producto\"]],\n    decls: 45,\n    vars: 5,\n    consts: [[1, \"title\"], [4, \"ngIf\"], [1, \"container\"], [1, \"card\"], [3, \"formGroup\", \"ngSubmit\"], [\"cols\", \"2\", \"rowHeight\", \"80px\"], [3, \"colspan\"], [\"appearance\", \"outline\"], [\"formControlName\", \"nombrePro\", \"matInput\", \"\", \"autocomplete\", \"off\"], [\"formControlName\", \"descripcionPro\", \"matInput\", \"\", \"autocomplete\", \"off\"], [\"formControlName\", \"categoriaP\", \"matInput\", \"\", \"autocomplete\", \"off\"], [\"formControlName\", \"cantidadPro\", \"matInput\", \"\", \"autocomplete\", \"off\"], [\"formControlName\", \"precio\", \"matInput\", \"\", \"autocomplete\", \"off\"], [\"formControlName\", \"imagen\", \"matInput\", \"\", \"autocomplete\", \"off\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"btnAceptar\"], [\"mat-raised-button\", \"\", \"routerLink\", \"/listpro\"]],\n    template: function AgregarEditarProductoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(3, AgregarEditarProductoComponent_app_spinner_3_Template, 1, 0, \"app-spinner\", 1);\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"mat-card\", 3)(6, \"mat-card-subtitle\");\n        i0.ɵɵtext(7, \" Ats \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function AgregarEditarProductoComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.agregarEditarPro();\n        });\n        i0.ɵɵelementStart(9, \"mat-grid-list\", 5)(10, \"mat-grid-tile\", 6)(11, \"mat-form-field\", 7)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Nombre:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"mat-grid-tile\")(16, \"mat-form-field\", 7)(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Descripcion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"mat-grid-tile\")(21, \"mat-form-field\", 7)(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Categoria\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"mat-grid-tile\")(26, \"mat-form-field\", 7)(27, \"mat-label\");\n        i0.ɵɵtext(28, \"Cantidad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"mat-grid-tile\")(31, \"mat-form-field\", 7)(32, \"mat-label\");\n        i0.ɵɵtext(33, \"Precio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"input\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"mat-grid-tile\")(36, \"mat-form-field\", 7)(37, \"mat-label\");\n        i0.ɵɵtext(38, \"Imagen\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"mat-grid-tile\", 6)(41, \"button\", 14);\n        i0.ɵɵtext(42, \"Aceptar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"button\", 15);\n        i0.ɵɵtext(44, \"Volver\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.operacion, \" Nueva Producto\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"colspan\", 2);\n        i0.ɵɵadvance(30);\n        i0.ɵɵproperty(\"colspan\", 2);\n      }\n    },\n    dependencies: [i5.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i6.MatGridList, i6.MatGridTile, i7.MatFormField, i7.MatLabel, i8.MatInput, i9.MatButton, i10.MatCard, i10.MatCardSubtitle, i11.SpinnerComponent, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","AgregarEditarProductoComponent","constructor","fb","_productoService","router","aRoute","_snackBar","form","group","localid","required","nombrePro","precio","descripcionPro","categoriaP","imagen","cantidadPro","Id","Number","snapshot","paramMap","get","ngOnInit","operacion","obtenerPro","loading","getProducto","subscribe","data","setValue","agregarEditarPro","producto","value","editarPro","agregarPro","console","log","updateProducto","mensajeExito","navigate","addProducto","texto","open","duration","horizontalPosition","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\54351\\Desktop\\Practica1\\Front\\src\\app\\components\\store\\agregar-editar-producto\\agregar-editar-producto.component.ts","C:\\Users\\54351\\Desktop\\Practica1\\Front\\src\\app\\components\\store\\agregar-editar-producto\\agregar-editar-producto.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Producto } from 'src/app/interfaces/producto';\nimport { ProductoService } from 'src/app/services/producto.service';\n\n@Component({\n  selector: 'app-agregar-editar-producto',\n  templateUrl: './agregar-editar-producto.component.html',\n  styleUrls: ['./agregar-editar-producto.component.css']\n})\nexport class AgregarEditarProductoComponent implements OnInit{\n  loading: boolean = false;\n  form: FormGroup;\n  Id: number;\n\n  operacion: string='Agregar';\n\n\n  constructor(private fb: FormBuilder,private  _productoService: ProductoService,private router:Router,private aRoute:ActivatedRoute,\n    private _snackBar: MatSnackBar){\n    this.form = this.fb.group({\n      localid: ['', Validators.required],\n      nombrePro: ['', Validators.required],\n      precio: ['', Validators.required],\n      descripcionPro: ['', Validators.required],\n      categoriaP: ['', Validators.required],\n      imagen: ['', Validators.required],\n      cantidadPro: ['', Validators.required],\n\n  })\n  this.Id=Number(this.aRoute.snapshot.paramMap.get('Id'));\n\n\n}\n  ngOnInit(): void {\n\n\n\n    if(this.Id != 0) {\n      this.operacion = 'Editar';\n      this.obtenerPro(this.Id)\n    }\n\n      }\n\n\n\n obtenerPro(Id:number){\n        this.loading = true;\n    this._productoService.getProducto(Id).subscribe(data => {\n      this.form.setValue({\n        nombrePro: data.nombrePro,\n        descripcionPro: data.descripcionPro,\n        categoriaP: data.categoriaP,\n        cantidadPro: data.cantidadPro,\n        imagen: data.imagen,\n        precio: data.precio,\n        localid: data.precio,\n\n\n\n\n      })\n      this.loading = false;\n    })\n      }\n\n\n      agregarEditarPro() {\n        \n        const producto: Producto = {\n          localid: this.form.value.precio,  // Corrected from precio to localid\n      \n          nombrePro: this.form.value.nombrePro,\n          descripcionPro: this.form.value.descripcionPro,\n          categoriaP: this.form.value.categoriaP,\n          cantidadPro: this.form.value.cantidadPro,\n          imagen: this.form.value.imagen,\n          precio: this.form.value.precio,\n        }\n      \n        if (this.Id != 0) {\n          producto.Id = this.Id;\n          this.editarPro(this.Id, producto);\n        } else {\n          this.agregarPro(producto);\n        }\n      }\n      editarPro(Id: number, producto: Producto) {\n        console.log('Product to update:', producto); // Add this line\n        this.loading = true;\n        this._productoService.updateProducto(Id, producto).subscribe(() => {\n          this.loading = false;\n          console.log('llegue')\n          this.mensajeExito('actualizado');\n          this.router.navigate(['/listPro']);\n        });\n      }\n      \n    agregarPro(producto:Producto) {\n      this._productoService.addProducto(producto).subscribe(data => {\n        this.mensajeExito('registrado');\n        this.router.navigate(['/listPro']);\n\n      \n  } )\n }\n  mensajeExito(texto: string) {\n    this._snackBar.open(`El producto fue ${texto} con exito`,'', {\n      duration: 4000,\n      horizontalPosition: 'right',\n    });\n  }\n\n\n\n\n}\n","<div class=\"title\">\n    <h1>{{ operacion }} Nueva Producto</h1>\n</div>\n<app-spinner *ngIf=\"loading\"></app-spinner>\n<div class=\"container\">\n    <mat-card class=\"card\">\n        <mat-card-subtitle>\n            Ats\n        </mat-card-subtitle>\n        <form [formGroup]=\"form\" (ngSubmit)=\"agregarEditarPro()\">\n            <mat-grid-list cols=\"2\" rowHeight=\"80px\">\n                <mat-grid-tile [colspan]=\"2\">\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Nombre:</mat-label>\n                        <input formControlName=\"nombrePro\" matInput autocomplete=\"off\">\n                    </mat-form-field>\n                </mat-grid-tile>\n                <mat-grid-tile>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Descripcion</mat-label>\n                        <input formControlName=\"descripcionPro\" matInput autocomplete=\"off\">\n                    </mat-form-field>\n                </mat-grid-tile>\n                <mat-grid-tile>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Categoria</mat-label>\n                        <input formControlName=\"categoriaP\" matInput autocomplete=\"off\">\n                    </mat-form-field>\n                </mat-grid-tile>\n                <mat-grid-tile>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Cantidad</mat-label>\n                        <input formControlName=\"cantidadPro\" matInput autocomplete=\"off\">\n                    </mat-form-field>\n                </mat-grid-tile>\n                <mat-grid-tile>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Precio</mat-label>\n                        <input formControlName=\"precio\" matInput autocomplete=\"off\">\n                    </mat-form-field>\n                </mat-grid-tile>\n                <mat-grid-tile>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Imagen</mat-label>\n                        <input formControlName=\"imagen\" matInput autocomplete=\"off\">\n                    </mat-form-field>\n                </mat-grid-tile>\n               \n                <mat-grid-tile [colspan]=\"2\">\n                    <button  type=\"submit\" class=\"btnAceptar\" mat-raised-button color=\"primary\">Aceptar</button>\n                    <button mat-raised-button routerLink=\"/listpro\">Volver</button>\n                </mat-grid-tile>\n            </mat-grid-list>\n        </form>\n    </mat-card>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}