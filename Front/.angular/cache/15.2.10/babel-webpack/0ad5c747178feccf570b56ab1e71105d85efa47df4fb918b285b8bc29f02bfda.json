{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AgregarEditarProductoComponent } from '../agregar-editar-producto/agregar-editar-producto.component';\nlet ListProductosComponent = class ListProductosComponent {\n  //   role: string = '';\n  //   mostrarBotonAgregar: boolean = true;\n  constructor(_snackBar, _productoService, route, router) {\n    this._snackBar = _snackBar;\n    this._productoService = _productoService;\n    this.route = route;\n    this.router = router;\n    this.displayedColumns = ['nombrePro', 'categoriaP', 'precio', 'acciones'];\n    this.dataSource = new MatTableDataSource();\n    this.loading = false;\n    this.productoList = [];\n    this.Id = '';\n    this.route.params.subscribe(params => {\n      this.Id = params['Id'].toString();\n    });\n  }\n  ngOnInit() {\n    this.obtenerProductos();\n  }\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    if (this.dataSource.data.length > 0 && this.paginator._intl) {\n      this.paginator._intl.itemsPerPageLabel = 'Items por pagina';\n    }\n  }\n  obtenerProductos() {\n    this._productoService.getProductosByLocalId(this.Id).subscribe(response => {\n      this.productoList = response;\n      this.dataSource.data = this.productoList;\n    });\n  }\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  eliminarProducto(Id) {\n    this.loading = true;\n    this._productoService.deleteProducto(Id).subscribe(() => {\n      this.mensajeExito();\n      this.loading = false;\n      this.obtenerProductos();\n    });\n  }\n  mensajeExito() {\n    this._snackBar.open('Producto Eliminado Exitosamente', '', {\n      duration: 1500,\n      horizontalPosition: 'right'\n    });\n  }\n  verFichaAts(Id) {\n    this.router.navigate(['/verPro/', Id]);\n  }\n};\n__decorate([ViewChild(AgregarEditarProductoComponent)], ListProductosComponent.prototype, \"agregarEditarProductoComponent\", void 0);\n__decorate([ViewChild(MatPaginator)], ListProductosComponent.prototype, \"paginator\", void 0);\n__decorate([ViewChild(MatSort)], ListProductosComponent.prototype, \"sort\", void 0);\nListProductosComponent = __decorate([Component({\n  selector: 'app-list-productos',\n  templateUrl: './list-productos.component.html',\n  styleUrls: ['./list-productos.component.css']\n})], ListProductosComponent);\nexport { ListProductosComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","MatPaginator","MatSort","MatTableDataSource","AgregarEditarProductoComponent","ListProductosComponent","constructor","_snackBar","_productoService","route","router","params","subscribe","Id","toString","ngOnInit","obtenerProductos","ngAfterViewInit","dataSource","paginator","sort","data","length","_intl","itemsPerPageLabel","getProductosByLocalId","response","productoList","applyFilter","event","filterValue","target","value","filter","trim","toLowerCase","eliminarProducto","loading","deleteProducto","mensajeExito","open","duration","horizontalPosition","verFichaAts","navigate","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\54351\\Desktop\\Practica1\\Front\\src\\app\\components\\store\\list-productos\\list-productos.component.ts"],"sourcesContent":["import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSort } from '@angular/material/sort';\n\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Producto } from 'src/app/interfaces/producto';\nimport { ProductoService } from 'src/app/services/producto.service';\nimport { AgregarEditarProductoComponent } from '../agregar-editar-producto/agregar-editar-producto.component';\n\n@Component({\n  selector: 'app-list-productos',\n  templateUrl: './list-productos.component.html',\n  styleUrls: ['./list-productos.component.css']\n})\nexport class ListProductosComponent implements OnInit, AfterViewInit {\n  displayedColumns: string[] = ['nombrePro', 'categoriaP', 'precio','acciones'];\n  dataSource = new MatTableDataSource<Producto>();\n  loading: boolean = false;\n  @ViewChild(AgregarEditarProductoComponent) agregarEditarProductoComponent!: AgregarEditarProductoComponent;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  productoList: Producto[] = [];\n  Id: string = '';\n//   role: string = '';\n//   mostrarBotonAgregar: boolean = true;\n  \n  constructor(\n      private _snackBar: MatSnackBar,\n      private _productoService: ProductoService,\n      private route: ActivatedRoute,\n      private router: Router,\n  \n  \n  ) {\n      this.route.params.subscribe(params => {\n          this.Id = params['Id'].toString();\n      });\n  }\n  \n  ngOnInit(): void {\n   \n        this.obtenerProductos();\n      \n  \n      }\n    \n     \n  ngAfterViewInit() {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      if (this.dataSource.data.length > 0 && this.paginator._intl) {\n          this.paginator._intl.itemsPerPageLabel = 'Items por pagina'\n      }\n  }\n  \n  obtenerProductos() {\n      this._productoService.getProductosByLocalId(this.Id).subscribe(response => {\n          this.productoList = response;\n          this.dataSource.data = this.productoList;\n  \n     \n      });\n  }\n  \n  applyFilter(event: Event) {\n      const filterValue = (event.target as HTMLInputElement).value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  \n  eliminarProducto(Id: number) {\n      this.loading = true;\n      this._productoService.deleteProducto(Id).subscribe(() => {\n          this.mensajeExito();\n          this.loading = false;\n          this.obtenerProductos();\n      });\n  }\n  \n  mensajeExito() {\n      this._snackBar.open('Producto Eliminado Exitosamente', '', {\n          duration: 1500,\n          horizontalPosition: 'right'\n      });\n  }\n  \n  verFichaAts(Id: number) {\n      this.router.navigate(['/verPro/', Id]);\n    }\n \n  }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}