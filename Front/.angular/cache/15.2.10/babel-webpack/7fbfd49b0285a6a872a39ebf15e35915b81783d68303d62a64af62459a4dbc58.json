{"ast":null,"code":"import { environment } from 'src/enviroments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CarroService {\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = environment.Url;\n    this.myApiUrl = 'api/Carro/';\n  }\n  agregarProductoAlCarrito(productoId) {\n    // Lógica para agregar el producto al carrito en tu backend\n    return this.http.post(`${this.myApiUrl}/carrito/agregar`, {\n      productoId\n    });\n  }\n  getProductosCarrito() {\n    // Lógica para obtener los productos del carrito desde tu backend\n    return this.http.get(`${this.myApiUrl}/carrito`);\n  }\n  static #_ = this.ɵfac = function CarroService_Factory(t) {\n    return new (t || CarroService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CarroService,\n    factory: CarroService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,yCAAyC;;;AAKrE,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJhB,aAAQ,GAAWH,WAAW,CAACI,GAAG;IAClC,aAAQ,GAAW,YAAY;EAGA;EAEvCC,wBAAwB,CAACC,UAAkB;IACzC;IACA,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACC,QAAQ,kBAAkB,EAAE;MAAEF;IAAU,CAAE,CAAC;EAC3E;EAEAG,mBAAmB;IACjB;IACA,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAQ,GAAG,IAAI,CAACF,QAAQ,UAAU,CAAC;EACzD;EAAC;qBAfUP,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAU,SAAZV,YAAY;IAAAW,YAFX;EAAM","names":["environment","CarroService","constructor","http","Url","agregarProductoAlCarrito","productoId","post","myApiUrl","getProductosCarrito","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\54351\\Desktop\\Practica1\\Front\\src\\app\\services\\carro.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/enviroments/environment.development';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarroService {\n  private myAppUrl: string = environment.Url;\n  private myApiUrl: string = 'api/Carro/';\n\n\n  constructor(private http: HttpClient) {}\n\n  agregarProductoAlCarrito(productoId: number): Observable<any> {\n    // Lógica para agregar el producto al carrito en tu backend\n    return this.http.post(`${this.myApiUrl}/carrito/agregar`, { productoId });\n  }\n\n  getProductosCarrito(): Observable<any[]> {\n    // Lógica para obtener los productos del carrito desde tu backend\n    return this.http.get<any[]>(`${this.myApiUrl}/carrito`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}